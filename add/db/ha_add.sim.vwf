/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2004 Altera Corporation
Any  megafunction  design,  and related netlist (encrypted  or  decrypted),
support information,  device programming or simulation file,  and any other
associated  documentation or information  provided by  Altera  or a partner
under  Altera's   Megafunction   Partnership   Program  may  be  used  only
to program  PLD  devices (but not masked  PLD  devices) from  Altera.   Any
other  use  of such  megafunction  design,  netlist,  support  information,
device programming or simulation file,  or any other  related documentation
or information  is prohibited  for  any  other purpose,  including, but not
limited to  modification,  reverse engineering,  de-compiling, or use  with
any other  silicon devices,  unless such use is  explicitly  licensed under
a separate agreement with  Altera  or a megafunction partner.  Title to the
intellectual property,  including patents,  copyrights,  trademarks,  trade
secrets,  or maskworks,  embodied in any such megafunction design, netlist,
support  information,  device programming or simulation file,  or any other
related documentation or information provided by  Altera  or a megafunction
partner, remains with Altera, the megafunction partner, or their respective
licensors. No other licenses, including any licenses needed under any third
party's intellectual property, are provided herein.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1";
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("A0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("A1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("OA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OF")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OG")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("COM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("AB1")
{
	MEMBERS = "A1", "B1";
}

GROUP("AB0")
{
	MEMBERS = "A0", "B0";
}

GROUP("OUT")
{
	MEMBERS = "OA", "OB", "OC", "OD", "OE", "OF", "OG";
}

TRANSITION_LIST("A0")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("A1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 66;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 7.5;
		}
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("B0")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 200;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
		}
	}
}

TRANSITION_LIST("B1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("OA")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 32;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 2.5;
				LEVEL 0 FOR 2.5;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 7.5;
				LEVEL 0 FOR 2.5;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 2.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
		}
	}
}

TRANSITION_LIST("OB")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 33;
			LEVEL 1 FOR 7.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 7.5;
		LEVEL 0 FOR 2.5;
	}
}

TRANSITION_LIST("OC")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 33;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 27.5;
		}
	}
}

TRANSITION_LIST("OD")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2.5;
		NODE
		{
			REPEAT = 66;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 12.5;
		}
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("OE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 32;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 2.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 5.0;
				LEVEL 1 FOR 5.0;
			}
		}
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("OF")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2.5;
		NODE
		{
			REPEAT = 33;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 7.5;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 2.5;
	}
}

TRANSITION_LIST("OG")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 33;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 7.5;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("COM")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "AB1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2;
}

DISPLAY_LINE
{
	CHANNEL = "A1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AB0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "A0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "B0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "OUT";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "OA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "OB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "OC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "OD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "OE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "OF";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "OG";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "COM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 11375;
	MASTER = TRUE;
}
;
